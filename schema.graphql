type Query {
    hello(name: String): String!,
    sum(a: String, b: String): String!,
    status: String!,
    clientes: [Cliente!]!,
    cliente(id: ID!): Cliente!,
    pets: [Pet!]!,
    pet(id: ID!): Pet!,
    objetosDeAprendizagem: [ObjetoDeAprendizagem!]!
}

type Cliente {
    id: ID!,
    nome: String!,
    cpf: String!,
    pets: [Pet!]
}

type Pet {
    id: ID!,
    nome: String!,
    dono: Cliente!,
    tipo: String,
    observacoes: String
}

scalar DateTime

type ObjetoDeAprendizagem {
     id: ID!,
     dtdispo: DateTime,
     tema: String,
     finalidade: String,
     atividade: Int,
     dplataf: Int,
     dares: Int, 
     url_ares: Int, 
     url_youtube: Int, 
     davasus: Int, 
     drsociais: Int, 
     doutros: Int, 
     tipo: Int, 
     decs: String, 
     num: Int

}

type Mutation {
    adicionarCliente(nome: String!, cpf: String!): Cliente!,
    atualizarCliente(id: ID!, nome: String!, cpf: String!): Cliente!,
    deletarCliente(id: ID!): ID!,
    adicionarPet(nome: String!, donoId: Int!, tipo: String, observacoes: String): Pet!,
    atualizarPet(id: ID!, nome: String, donoId: Int!, tipo: String, observacoes: String): Pet!,
    deletarPet(id: ID!): ID!

}

